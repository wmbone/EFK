---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-daemonset-config
  namespace: kube-system
  labels:
    k8s-app: metricbeat
data:
  metricbeat.yml: |-
    metricbeat.config.modules:
      # Mounted `metricbeat-daemonset-modules` configmap:
      path: ${path.config}/modules.d/*.yml
      # Reload module configs as they change:
      reload.enabled: false

    metricbeat.autodiscover:
      providers:
        - type: kubernetes
          scope: cluster
          node: ${NODE_NAME}
          unique: true
          templates:
            - config:
                - module: kubernetes
                  hosts: ["kube-state-metrics:8080"]
                  period: 10s
                  add_metadata: true
                  metricsets:
                    - state_node
                    - state_deployment
                    - state_daemonset
                    - state_replicaset
                    - state_pod
                    - state_container
                    - state_cronjob
                    - state_resourcequota
                    - state_statefulset
                - module: kubernetes
                  metricsets:
                    - apiserver
                  hosts: ["https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}"]
                  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                  ssl.certificate_authorities:
                    - /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                  period: 30s
                # Uncomment this to get k8s events:
                - module: kubernetes
                  metricsets:
                    - event
        # To enable hints based autodiscover uncomment this:
        - type: kubernetes
          node: ${NODE_NAME}
          hints.enabled: true

    processors:
      - add_cloud_metadata:

    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}

    output.elasticsearch:
    # hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
      hosts: ['https://10.111.179.147:9200']
      username: elastic
      password: #{ ENV['ELASTICSEARCH_PASSWORD'] }
      xpack.enabled: true
      ssl.verification_mode: "none"
      ssl.certificate_autorities:
        - |
          -----BEGIN CERTIFICATE-----
          MIID0TCCArmgAwIBAgIRAOPlgwNlkma+qfpQuhEox/swDQYJKoZIhvcNAQELBQAw
          LzETMBEGA1UECxMKcXVpY2tzdGFydDEYMBYGA1UEAxMPcXVpY2tzdGFydC1odHRw
          MB4XDTIwMTIwNDA0MzUzN1oXDTIxMTIwNDA0NDUzN1owQzETMBEGA1UECxMKcXVp
          Y2tzdGFydDEsMCoGA1UEAxMjcXVpY2tzdGFydC1lcy1odHRwLmRlZmF1bHQuZXMu
          bG9jYWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDYoFdKlvbfNyIu
          FBSLmy8RqQrf5FFBKHLY/qwYTwqqcm2HnQBL+rl/mFZzR8ZBxFfbaVeYjcV5bWgr
          g8yJZAOH2Zoh/qIbV1R4X9j8T7Ffb4yg8IrqjQd/cJhHMLK9V9z+0q8v0OUWZ+mq
          Q3+L0EPII39lNWqnNh4XySPpnABKaK5+DB7gCOtdJs+M/nsz2Nur0nh6uhRdur8r
          eaLb9TlqZAD0wCB31qEFFJsZVn9v/MRCEgEPrzj+J7F9Qx3qlWqjEWz2vEiFtknQ
          wiXa/LiGwUiosx6COVAp8LtW8byzgjMIUusUrgBRsxXoXzXk8eHkASP7Lgn9T77C
          DbW2+OPlAgMBAAGjgdMwgdAwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsG
          AQUFBwMBBggrBgEFBQcDAjAfBgNVHSMEGDAWgBSR7YwOWh1rBBDaTez6g/nFwePs
          RjB+BgNVHREEdzB1giNxdWlja3N0YXJ0LWVzLWh0dHAuZGVmYXVsdC5lcy5sb2Nh
          bIIScXVpY2tzdGFydC1lcy1odHRwgh5xdWlja3N0YXJ0LWVzLWh0dHAuZGVmYXVs
          dC5zdmOCGnF1aWNrc3RhcnQtZXMtaHR0cC5kZWZhdWx0MA0GCSqGSIb3DQEBCwUA
          A4IBAQArZaRSWwnahNzT0h1tzMWyi7HMvVEoX6lVLVSDePUQbsj8aLd5/DGcRtXQ
          OZbrfaJwefkv8UQKRUhnqt2OqposbMqwPIGwifbJJjOo3xYqnD0WDuPqSaJ2eMWP
          R1CNnJ+yhSmVI3NAlnTFYa3ypbTu/q5MeavUnVrkUof+ErEAGI4CNEn01v2VouXd
          P9WgZLtYawSGo3zz6KzW8ie/cFpbEZp6chyCnlYRnFR/1kHdM76msA1JUPrVkdlw
          Ih7fb2Vqq0jmK1wjSwXJMDOpygqqHR+pSZU35iqJAObuClv5CVGUFhnQTuqC2TLU
          /f1YjwXU9w8rXLb5+7aI1bkGYlnG
          -----END CERTIFICATE-----
          -----BEGIN CERTIFICATE-----
          MIIDSTCCAjGgAwIBAgIQKevFCLpGlc8B58J61eqIqzANBgkqhkiG9w0BAQsFADAv
          MRMwEQYDVQQLEwpxdWlja3N0YXJ0MRgwFgYDVQQDEw9xdWlja3N0YXJ0LWh0dHAw
          HhcNMjAxMjA0MDQzNTM3WhcNMjExMjA0MDQ0NTM3WjAvMRMwEQYDVQQLEwpxdWlj
          a3N0YXJ0MRgwFgYDVQQDEw9xdWlja3N0YXJ0LWh0dHAwggEiMA0GCSqGSIb3DQEB
          AQUAA4IBDwAwggEKAoIBAQDJw5NWkx2GiXuy43rNou0ZrJhP4fLU4kOjM1j5CRzF
          AgGanmb7UKyp3bqDlIp9ZW6aDUQgXgHpZWhrnI0V15JuKdb2qlWdJWOQ6Om7b2YC
          vzbkq7OF0EKDirCb9MpS2ZrD+vd0kEVNcU/yjpdNRbj0JYNB+oGVekZzH3p960K5
          MeteQBBDlPWNcdf+VN2NsyhLvo/4z96t4zhYinIq40xpI0JG3pDVhoReejDtbThN
          Sd3IcNMJigV6xJMfloTYTLqsLTwafiWA+rh3IDdvocaruwYVewzJb7AVKId3Iegq
          pn5215cu+6bzATivakPrV4PIo4OcjT2cHb2BrPxdb2oFAgMBAAGjYTBfMA4GA1Ud
          DwEB/wQEAwIChDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDwYDVR0T
          AQH/BAUwAwEB/zAdBgNVHQ4EFgQUke2MDlodawQQ2k3s+oP5xcHj7EYwDQYJKoZI
          hvcNAQELBQADggEBABq41VybA2bwxE0jPqibN8M/IeizYnLw4T0/gDoAORgqY2VC
          7DaN5mXSmIVfzO8tHEfK6rJ/jtNahCvGY8iJiUL0k7cjCKSzs1DTLXOf0TAoIWjz
          +PMeseiNvdliONnWMcuQNwHQMsEm2ROp3+FPYiBQOfLx2fj1jFkGKu6EdXdBrTeO
          HHElQUY+ApkpGgMwnHE9aKBlDUtxj8+8zOj9/gFfqGjzv1i59g9b8vujKG793Omj
          +n1YDRo/UkbkR2Vep3kXspP2QKlyDGDNh545RLC9nTm6+VhSCyhAn0pNVFHhSDw8
          wn/O37MgiecmMiUryXH/7+vMviDfQRwKUgVwMU8=
          -----END CERTIFICATE-----
    setup.kibana:
      host: "10.102.229.230:5601"
      protocol: "https"
      username: "elastic"
      password: "#{ ENV['ELASTICSEARCH_PASSWORD'] }"
      ssl.verification_mode: "none"
    setup.dashboards.enabled: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-daemonset-modules
  namespace: kube-system
  labels:
    k8s-app: metricbeat
data:
  system.yml: |-
    - module: system
      period: 10s
      metricsets:
        - cpu
        - load
        - memory
        - network
        - process
        - process_summary
        #- core
        #- diskio
        #- socket
      processes: ['.*']
      process.include_top_n:
        by_cpu: 5      # include top 5 processes by CPU
        by_memory: 5   # include top 5 processes by memory

    - module: system
      period: 1m
      metricsets:
        - filesystem
        - fsstat
      processors:
      - drop_event.when.regexp:
          system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib|snap)($|/)'
  kubernetes.yml: |-
    - module: kubernetes
      metricsets:
        - node
        - system
        - pod
        - container
        - volume
      period: 10s
      host: ${NODE_NAME}
      hosts: ["https://${NODE_NAME}:10250"]
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      ssl.verification_mode: "none"
      # If there is a CA bundle that contains the issuer of the certificate used in the Kubelet API,
      # remove ssl.verification_mode entry and use the CA, for instance:
      #ssl.certificate_authorities:
        #- /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
    # Currently `proxy` metricset is not supported on Openshift, comment out section
    - module: kubernetes
      metricsets:
        - proxy
      period: 10s
      host: ${NODE_NAME}
      hosts: ["localhost:10249"]
---
# Deploy a Metricbeat instance per node for node metrics retrieval
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: metricbeat
  namespace: kube-system
  labels:
    k8s-app: metricbeat
spec:
  selector:
    matchLabels:
      k8s-app: metricbeat
  template:
    metadata:
      labels:
        k8s-app: metricbeat
    spec:
      serviceAccountName: metricbeat
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: metricbeat
        image: docker.elastic.co/beats/metricbeat:7.10.1
        args: [
          "-c", "/etc/metricbeat.yml",
          "-e",
          "-system.hostfs=/hostfs",
        ]
        env:
        - name: ELASTICSEARCH_HOST
          value: 10.111.179.147
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USERNAME
          value: elastic
        - name: ELASTICSEARCH_PASSWORD
          value: #{ ENV['ELASTICSEARCH_PASSWORD'] }
        - name: ELASTIC_CLOUD_ID
          value:
        - name: ELASTIC_CLOUD_AUTH
          value:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          runAsUser: 0
          # If using Red Hat OpenShift uncomment this:
          #privileged: true
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/metricbeat.yml
          readOnly: true
          subPath: metricbeat.yml
        - name: data
          mountPath: /usr/share/metricbeat/data
        - name: modules
          mountPath: /usr/share/metricbeat/modules.d
          readOnly: true
        - name: proc
          mountPath: /hostfs/proc
          readOnly: true
        - name: cgroup
          mountPath: /hostfs/sys/fs/cgroup
          readOnly: true

      volumes:
      - name: proc
        hostPath:
          path: /proc
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
      - name: config
        configMap:
          defaultMode: 0640
          name: metricbeat-daemonset-config
      - name: modules
        configMap:
          defaultMode: 0640
          name: metricbeat-daemonset-modules
      - name: data
        hostPath:
          # When metricbeat runs as non-root user, this directory needs to be writable by group (g+w)
          path: /var/lib/metricbeat-data
          type: DirectoryOrCreate
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metricbeat
subjects:
- kind: ServiceAccount
  name: metricbeat
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: metricbeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metricbeat
  labels:
    k8s-app: metricbeat
rules:
- apiGroups: [""]
  resources:
  - nodes
  - namespaces
  - events
  - pods
  - secrets
  - services
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources:
  - replicasets
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources:
  - statefulsets
  - deployments
  - replicasets
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - nodes/stats
  verbs:
  - get
- nonResourceURLs:
  - "/metrics"
  verbs:
  - get
- apiGroups:
    - coordination.k8s.io
  resources:
    - leases
  verbs:
    - '*'
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metricbeat
  namespace: kube-system
  labels:
    k8s-app: metricbeat
---
